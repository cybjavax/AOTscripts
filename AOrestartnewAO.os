#Использовать v8runner
#Использовать cmdline

//пришлось скопировать из еще необновленной библиотеки ФС
Процедура ОбеспечитьКаталог(Знач Путь)
    Объект = Новый Файл(Путь);
    Если Не Объект.Существует() Тогда
        СоздатьКаталог(Путь);
    ИначеЕсли Объект.ЭтоКаталог() Тогда
        УдалитьФайлы(Путь, ПолучитьМаскуВсеФайлы());
    Иначе
        ВызватьИсключение "Не удается создать каталог " + Путь;
    КонецЕсли;
КонецПроцедуры

Функция КаталогСуществует(Знач Путь) Экспорт
    Объект = Новый Файл(Путь);
    Возврат Объект.Существует() и Объект.ЭтоКаталог();
КонецФункции

Процедура _ОбеспечитьКаталог(Знач Путь)
    Объект = Новый Файл(Путь);
    Если Не Объект.Существует() Тогда
        СоздатьКаталог(Путь);
    ИначеЕсли Объект.ЭтоКаталог() Тогда
        //УдалитьФайлы(Путь, ПолучитьМаскуВсеФайлы());
    Иначе
        ВызватьИсключение "Не удается создать каталог " + Путь;
    КонецЕсли;
КонецПроцедуры // ОбеспечитьКаталог()

Процедура КопироватьСодержимоеКаталога(Знач Откуда, Знач Куда) Экспорт
	_ОбеспечитьКаталог(Куда);
	Файлы = НайтиФайлы(Откуда, ПолучитьМаскуВсеФайлы());
	Для Каждого Файл Из Файлы Цикл
		ПутьКопирования = ОбъединитьПути(Куда, Файл.Имя);
		Если Файл.ЭтоКаталог() Тогда
			КопироватьСодержимоеКаталога(Файл.ПолноеИмя, ПутьКопирования);
		Иначе
			КопироватьФайл(Файл.ПолноеИмя, ПутьКопирования);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ОбернутьВКавычки(Знач Строка);
	Если Лев(Строка, 1) = """" и Прав(Строка, 1) = """" Тогда
		Возврат Строка;
	Иначе
		Возврат """" + Строка + """";
	КонецЕсли;
КонецФункции

_каталогАО = "C:\1Cbases\AO"; 
_пустаяAO = "C:\1Cbases\AOcf\AO.dt";
_каталогРезультат = _каталогАО+"\результат";
_каталогРабочая = _каталогАО+"\рабочая";
_каталогСтарая = _каталогАО+"\старая";
_каталогНовая = _каталогАО+"\новая";

УдалитьФайлы(_каталогАО);
Сообщить("Удалил старый АО...");

//загружаем пустую АО
Конфигуратор = Новый УправлениеКонфигуратором();

Конфигуратор.СоздатьФайловуюБазу(_каталогАО);
Сообщить("Создал новую пустую...");
Конфигуратор.УстановитьКонтекст("/F"+_каталогАО, "", "");
Конфигуратор.ЗагрузитьИнформационнуюБазу(_пустаяAO);
Сообщить("Загрузил чистую АО...");

//подготовим базы для Обновления
ОбеспечитьКаталог(_каталогРабочая);
ОбеспечитьКаталог(_каталогСтарая);
ОбеспечитьКаталог(_каталогНовая);
Сообщить("Создал каталоги баз...");

//копируем базы
КопироватьСодержимоеКаталога(ТекущийКаталог()+"\bwork.cf\", _каталогРабочая);
Сообщить("Скопировал рабочую...");
КопироватьСодержимоеКаталога(ТекущийКаталог()+"\bold.cf\", _каталогСтарая);
Сообщить("Скопировал старую...");
КопироватьСодержимоеКаталога(ТекущийКаталог()+"\bfinal.cf\", _каталогНовая);
Сообщить("Скопировал новую...");

//запускаем обновление
//ожидается релиз с параметрами в командной строке для автообновлений
Сообщить("Запускаю АО...");
ЗапуститьПриложение(ОбернутьВКавычки(Конфигуратор.ПутьКПлатформе1С())+" ENTERPRISE /F"+_каталогАО+" /RunModeOrdinaryApplication", , Истина);

//копируем cf из полученной обновленной
Сообщить("Выгружаю обновленную...");
КонфигураторРезультат = Новый УправлениеКонфигуратором();
КонфигураторРезультат.УстановитьКонтекст("/F"+_каталогРезультат, "", "");
КонфигураторРезультат.ВыгрузитьКонфигурациюВФайл(ТекущийКаталог()+"\Обновления\"+"update.cf");//+Формат(ТекущаяДата(), "MMdd-HHmm")+".cf");

Сообщить("ок...");
